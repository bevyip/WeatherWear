
  <div id="main-page"></div>

  {{# if currentUserId}}
  <nav class="navbar">
    <div class="navbar-brand">
      <a href="/main">WeatherWear</a>
    </div>

    <div class="navbar-text">
        <a class="navbar-link" href="/dateLog/all">My History | </a>
        <a class="navbar-link" href="/logout">Sign Out</a>
    </div>
  </nav>

  <div class="section landing-content">
    <div class="section landing-welcome">
      <h1 id="landing-name">Hello, {{userName}}</h1>
    </div>
    <div class="section landing-today-weather">
      <!-- show only user input IF THERE IS A USER INPUT -->
      {{# if weather}}
      {{#each weather as |w|}}
      <div class="today-weather">
        <div class="weather-heading">
          <h6>{{w.location}}</h6>
        </div>

        <div class="weather-sub-heading text-center">
          <!-- <p style="margin-top: 10px;">{{w.date}}</p> -->
          <h2>{{w.avetemp}}Â°F</h2>
        </div>

        <div class="weather-temp">
          <p><b>{{w.highTemp}}</b></p>
          <p>{{w.lowTemp}}</p>
        </div>

        <div class="weather-wind">
          <p>Average Wind Chill: </p>
          <p>{{w.avgwindchill}}</p>
        </div>

        <div class="weather-feels" style="margin-top: 2px;">
          <p>Feels like: </p>
          <p><b>{{w.highfeels}}</b></p>
          <p>{{w.lowfeels}}</p>
        </div>
      </div>
      {{/each}}

      <!-- show current location details at the start & if there is no user input -->
      {{else}}
        <div class="current-loc-weather">
          <h6 class="text-center" id="location"></h6>
          <h2 class="text-center" id="current-temp"></h2>
          <p class="text-center" id="feels-like"></p>
          <p class="text-center" id="wind-speed"></p>
        </div>
      </div>

      <div class="section main-buttons">
        <div onclick="create()">
          <div class="section landing-create">
            <h2>CREATE</h2>
          </div>
        </div>

      {{/if}}

        <div onclick="geoFindMe_compare()" class="section main-buttons">
          <div class="section landing-compare">
            <h2>COMPARE</h2>
          </div>
        </div>

      </div>
    {{/if}}
    </div>


  <script>
  // frontend call to get current location
  function geoFindMe() {
    let output = document.getElementById("location");

    if (!navigator.geolocation){
      output.innerHTML = "<p>Geolocation is not supported by your browser</p>";
      return;
    }

    function success(position){
      const lat  = position.coords.latitude;
      const long = position.coords.longitude;

      const api = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}
      &key=AIzaSyBEgWq5G822EXJIgfviFqJRf7vVE6_F5Lc`
      const options = { method: 'GET' };

      return fetch(api, options).then((res) => {
        return res.json()
      }).then((data) => {
        if(data.error){
          console.log("There's something wrong with your Geolocation API");
        }
        else{
          output.innerHTML = data.results[0].formatted_address;

          weatherNow(lat, long);
        }
      });
    }

    function error() {
      output.innerHTML = "Unable to retrieve your location";
    }

    navigator.geolocation.getCurrentPosition(success, error);
  }

  //frontend call to get current location's weather deets
  function weatherNow(latitude, longitude){
    fetch(`/api/${longitude}/${latitude}`).then( (res) => {
      return res.json();
    }).then( (data) => {
      document.getElementById("current-temp").innerHTML = data.currentTemp;
      document.getElementById("feels-like").innerHTML = "Feels Like: <b>" + data.currentFeels + "</b>";
      document.getElementById("wind-speed").innerHTML = "Average Wind Chill: <b>" + data.windSpeed + "</b>";

    }).catch( (err) => {
      console.log(err.message);
    });
  }

  // frontend call to backend function to pass current location so that route can find by temp
  function geoFindMe_compare(){
    if (!navigator.geolocation){
      output.innerHTML = "<p>Geolocation is not supported by your browser</p>";
      return;
    }

    function success2(position){
      const lat  = position.coords.latitude;
      const long = position.coords.longitude;

      const api = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}
      &key=AIzaSyBEgWq5G822EXJIgfviFqJRf7vVE6_F5Lc`
      const options = { method: 'GET' };

      return fetch(api, options).then((res) => {
        return res.json()
      }).then((data) => {
        if(data.error){
          console.log("There's something wrong with your Geolocation API");
        }
        else{
          let parser = document.createElement('a');
          parser.href = window.location.href;
          let http = parser.protocol;
          let hostname = parser.host;
          window.location.href = http+"//"+hostname+`/dateLog/compare/${long}/${lat}`;
          // window.location.href += `/dateLog/compare/${long}/${lat}`;
        }
      });
    }

    function error2() {
      output.innerHTML = "Unable to retrieve your location";
    }

    navigator.geolocation.getCurrentPosition(success2, error2);
  }

  // function call to check that there is no input from today before allowing user to create
  function create(){
    window.location.href += '/dateLog/new';
  }

  function setBackground(){
    let d = new Date();
    // let h = (d.getHours()<10?'0':'') + d.getHours();
    let h = 10;
    // let m = (d.getMinutes()<10?'0':'') + d.getMinutes();

    const landing = document.getElementById('main-page');
    const name = document.getElementById('landing-name');
    if (h >= 6 && h < 9) { //sunrise
      landing.style.backgroundImage = "url('/img/sunrise.jpg')";
      landing.style.backgroundRepeat = "no-repeat";
      landing.style.backgroundPosition = "0 0";
      landing.style.backgroundSize = "cover";
      landing.style.opacity = "0.9";
      name.style.color = "#383838";
    }
    else if (h >= 9 && h < 17) { //day
      landing.style.backgroundImage = "url('/img/day.jpg')";
      landing.style.backgroundRepeat = "no-repeat";
      landing.style.backgroundPosition = "0 0";
      landing.style.backgroundSize = "cover";
      landing.style.opacity = "0.7";
    }
    else if (h >= 17 && h < 21) { //sunset
      landing.style.backgroundImage = "url('/img/sunset.jpg')";
      landing.style.backgroundRepeat = "no-repeat";
      landing.style.backgroundPosition = "0 0";
      landing.style.backgroundSize = "cover";
      landing.style.opacity = "0.9";
      name.style.color = "#383838";
    }
    else { //night
      landing.style.backgroundImage = "url('/img/night.jpg')";
      landing.style.backgroundRepeat = "no-repeat";
      landing.style.backgroundPosition = "0 0";
      landing.style.backgroundSize = "cover";
      landing.style.opacity = "0.9";
      name.style.color = "#F5F5F5";
    }
  }

  setBackground();
  geoFindMe();

</script>
